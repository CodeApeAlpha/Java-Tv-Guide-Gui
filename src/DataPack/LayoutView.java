package DataPack;

import java.awt.Dimension;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author young
 */
public class LayoutView extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form LayoutView
     */
	private Object[][] FrameData;
	private Object[] HeaderData;
    public LayoutView(Object[][] Data,Object[] Header) {
    	FrameData=Data;
    	HeaderData=Header;
        initComponents(Data,Header);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(Object[][] Data,Object[] Header) {
    	FrameData=Data;
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(232, 217, 230));

        jButton1.setText("View");
        jButton1.setBackground(new java.awt.Color(134, 197, 129));

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Watch later");
        jButton2.setBackground(new java.awt.Color(127, 163, 220));

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        
        jButton3.setBackground(new java.awt.Color(244, 124, 178));
        jButton3.setText("Record");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jComboBox1.setBackground(new java.awt.Color(222, 144, 84));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Reord List", "Watch List" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jSplitPane2.setDividerLocation(200);
        jSplitPane2.setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(238, 238, 238));
//
//        jTable1.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {
//                {null, null, null, null},
//                {null, null, null, null},
//                {null, null, null, null},
//                {null, null, null, null}
//            },
//            new String [] {
//                "Title 1", "Title 2", "Title 3", "Title 4"
//            }
//        ));
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
	    model.setDataVector(Data,Header);
        jTable1.getTableHeader().setReorderingAllowed(false);        
        jTable1.setRowHeight(40);
        jTable1.setCellSelectionEnabled(true);
//        jTable1.setEnabled(false);
//        jTable1.setCellSelectionEnabled(true);

//        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1076, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane2.setRightComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(238, 238, 238));

        jLabel2.setText("<html><span style='font-size:12px'>"+"Title"+"</span></html>");
       

        

        jLabel3.setText("<html><span style='font-size:12px'>"+"CC"+"</span></html>");

        jLabel4.setText("<html><span style='font-size:12px'>"+"BROADCAST STATUS"+"</span></html>");

        jLabel5.setText("<html><span style='font-size:12px'>"+"SHORT DESCRIPTION"+"</span></html>");

        jLabel1.setText("<html><span style='font-size:12px'>"+"LENGTH"+"</span></html>");

        jLabel6.setText("jLabel6");

        jLabel7.setText("jLabel7");

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        jLabel10.setText("jLabel10");

        jLabel11.setText("MORE..");

        jLabel12.setText("jLabel12");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel11)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8))
                            .addComponent(jLabel6))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jSplitPane2.setLeftComponent(jPanel2);
        jButton4.setBackground(new java.awt.Color(221, 255, 51));
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jSplitPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Calendar rightNow = Calendar.getInstance();
        System.out.println();
		this.setTitle("JCTCL Cable TV Programme Listing            "+rightNow.getTime());
        pack();
    }                     

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) { 
    	
    }                                  

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
     
        int row = jTable1.rowAtPoint(evt.getPoint());
        int col = jTable1.columnAtPoint(evt.getPoint());
        General SubData= new General();
        SubData.GeneralFileSrchFun();
        String Channel=SubData.ChannelNameFileSrchFun((String) FrameData[row][0], true);  
        System.out.println(Channel);
        if(col!=0){
        	System.out.println(FrameData[row][col]);
        	jLabel6.setText((String) FrameData[row][col]);
        	SubData.SubData(Channel,(String)FrameData[row][col]);    	 
			jLabel8.setText(""+(String) SubData.getLength());
			jLabel10.setText("<html><body><br>"+(String) SubData.getShortDescription()+"</body></html>");
			jLabel7.setText(""+(String) SubData.getCC());
			jLabel9.setText(""+SubData.BroadCastStatusFun((String)SubData.getBroadCastStatus()));
			jLabel11.setText("<html><span style='font-size:20px'>"+SubData.GenreSrch((String)SubData.getProgramType())+"</span></html>");
			 
			 if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("GOSPEL")) {
				Gospel D= new Gospel((String) SubData.getTvProgramID());
				 jLabel12.setText("Denomination " +D.getDenomination());
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("KIDS")) {
				 Kids D= new Kids((String) SubData.getTvProgramID());
		 		 jLabel12.setText("Age-range "+D.getAgeRange());
		 	 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("COMEDY")) {
				 Comedy D= new Comedy((String) SubData.getTvProgramID());
		 		 jLabel12.setText("<html><body>"+"Stars "+"<br>"+D.getStars()+"<html><body>");
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("NEWS")) {
				 News D= new News((String) SubData.getTvProgramID());
		 		 jLabel12.setText("Time-Period: "+D.getNewsPeriod());
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("WHEATHER")) {
				 Weather D= new Weather((String) SubData.getTvProgramID());
		 		 jLabel12.setText("Severty: "+D.getSevertyRating());
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("MOVIES")) {		
				 Movies D= new Movies((String) SubData.getTvProgramID());
		 		 jLabel12.setText("<html><body>"+"Rating- "+D.getRating()+"<br>"+"Stars- "+D.getStars()+"<br>"+"Date Realsed-"+D.getDateReleased()+"<html><body>");
			 }
			 else {
				 jLabel12.setText("Genre Data: Null");
			 }
		
		    }
       
        

        
    }                                    

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //back
    	jButton1.setEnabled(true);
    	jButton2.setEnabled(true);
    	jButton3.setEnabled(true);
    	DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
 	    model.setDataVector(FrameData,HeaderData);
        jTable1.getTableHeader().setReorderingAllowed(false);        
        jTable1.setRowHeight(40);
        jTable1.setCellSelectionEnabled(true);
        
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	//view       
    	  int row= jTable1.getSelectedRow();
          int col= jTable1.getSelectedColumn();
          if(col==1) {
        	  jTable1.setModel(new DefaultTableModel());
              final JFrame parent = new JFrame();
              parent.setLayout(null);
              parent.setPreferredSize(new Dimension(400, 300));
              parent.setTitle("You Are watching "+jLabel6.getText());
              
              JLabel Label = new JLabel();
              Label.setText("⁣🚽 + 📱 + 📶 + 🔋 Infinite ENJOZY ");
              Label.setBounds(100,50, 200, 200);
              Label.setSize(20000, 100);
              parent.add(Label);
              parent.pack();
              parent.setVisible(true);
          }
          else {
        	  
        	  final JFrame parent = new JFrame();
              parent.setLayout(null);
              parent.setPreferredSize(new Dimension(400, 300));
              parent.setTitle("The program has not aired");
              JLabel Label = new JLabel();
              Label.setText("(✖╭╮✖)");
              Label.setBounds(150,50, 200, 200);
              Label.setSize(20000, 100);
              parent.add(Label);
              parent.pack();
              parent.setVisible(true);
              
          }
         


    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
//Watcher later       
		 int row= jTable1.getSelectedRow();
	     int col= jTable1.getSelectedColumn();
	     if (col!=0) {
	    	 
	    	 General SubData= new General();
		     String Channel=SubData.ChannelNameFileSrchFun((String) FrameData[row][0], true);
		     SubData.GeneralFileSrchFun();
		     boolean ADD=false;
		     String ChannelTemp;
		     String TvprogramTempName;
		     File UserFile=new File("WatchLater.txt");
		     Scanner WatchLaterSrch;
		     try {
				WatchLaterSrch = new Scanner(UserFile);
				while(WatchLaterSrch.hasNextLine()) {
					ChannelTemp=WatchLaterSrch.nextLine();
					TvprogramTempName=WatchLaterSrch.nextLine();
					if(ChannelTemp.equalsIgnoreCase(Channel)&& TvprogramTempName.equalsIgnoreCase((String) FrameData[row][col])) {
						ADD=true;
						JOptionPane.showMessageDialog(this, "This has been Added alredy");
						break; 
					}
				}
				WatchLaterSrch.close();
			} 
			catch (FileNotFoundException e1) {
				e1.printStackTrace();
			}
				
			if(ADD==false) {
				try {
					FileWriter myWriter;
					myWriter = new FileWriter("WatchLater.txt",true);
					myWriter.write(Channel+"\n"+(String) FrameData[row][col]+"\n");
					JOptionPane.showMessageDialog(this, "Has been added");
					myWriter.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			
	   }
	     else {
	    	 
				JOptionPane.showMessageDialog(this, "Invalid Selection");
	     }         
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {  
//record
    	
    	 int row= jTable1.getSelectedRow();
	     int col= jTable1.getSelectedColumn();
	     if (col!=0) {
	    	 General SubData= new General();
		     String Channel=SubData.ChannelNameFileSrchFun((String) FrameData[row][0], true);
		     SubData.GeneralFileSrchFun();
		     boolean ADD=false;
		     String ChannelTemp;
		     String TvprogramTempName;
		     File UserFile=new File("Record.txt");
		     Scanner WatchLaterSrch;
			try {
				WatchLaterSrch = new Scanner(UserFile);
				while(WatchLaterSrch.hasNextLine()) {
					ChannelTemp=WatchLaterSrch.nextLine();
					TvprogramTempName=WatchLaterSrch.nextLine();
					System.out.println("Channel "+Channel);
					System.out.println("Tv "+TvprogramTempName);
					if(ChannelTemp.equalsIgnoreCase(Channel)&& TvprogramTempName.equalsIgnoreCase((String) FrameData[row][col])) {
						ADD=true;
						JOptionPane.showMessageDialog(this,"This has been Added alredy");
						break; 
					}
				}
				WatchLaterSrch.close();
			} 
			catch (FileNotFoundException e1) {
				e1.printStackTrace();
			}
				
			if(ADD==false) {
				try {
					FileWriter myWriter;
					myWriter = new FileWriter("Record.txt",true);
					myWriter.write(Channel+"\n"+(String) FrameData[row][col]+"\n");
					JOptionPane.showMessageDialog(this, "Has been added");
					myWriter.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			
	   }
	     else {
	    	 
				JOptionPane.showMessageDialog(this, "Invalid Selection");
	     }
    }                                        

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
//      drop down        
    	jButton1.setEnabled(false);
    	jButton2.setEnabled(false);
    	jButton3.setEnabled(false);
    	ArrayList<Object> Watchlater =new ArrayList<>();
    	int Selection =jComboBox1.getSelectedIndex();
    	if(Selection==1) {
    		boolean ADD;
    		 File UserFile=new File("Watchlater.txt");
    		 String ChannelTemp;
 		     String TvprogramTempName;
 		     Scanner WatchLaterSrch;
    		try {
				WatchLaterSrch = new Scanner(UserFile);
				while(WatchLaterSrch.hasNextLine()) {
					ChannelTemp=WatchLaterSrch.nextLine();
					TvprogramTempName=WatchLaterSrch.nextLine();
					Watchlater.add(ChannelTemp);
					Watchlater.add(TvprogramTempName);	
				}
				WatchLaterSrch.close();
			} catch (FileNotFoundException e) {
				
				e.printStackTrace();
			}
    		System.out.print(Watchlater);
    		Object[][] DATA= new Object[10][10];
    		int col=0;
    		int count=0;
			for(int row=0; row<Watchlater.size()/2;row++) {
					DATA[row][col]=Watchlater.get(count);
					DATA[row][col+1]=Watchlater.get(count+1);
					count+=2;			
			}
			System.out.println(DATA[0][0]+" "+DATA[0][1]+" "+DATA[1][0]+" "+DATA[1][1]);
			DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
			Object Frame[]= {"Channel","TVPROGRAM"};
	 	    model.setDataVector(DATA,Frame);
	        jTable1.getTableHeader().setReorderingAllowed(false);        
	        jTable1.setRowHeight(40);
	        jTable1.setCellSelectionEnabled(true);		
    	}
    	if(Selection==0) {
    		boolean ADD;
  		  File UserFile=new File("Record.txt");
  		  String ChannelTemp;
		     String TvprogramTempName;
		     Scanner RecordSrch;
  		try {
  			RecordSrch = new Scanner(UserFile);
				while(RecordSrch.hasNextLine()) {
					ChannelTemp=RecordSrch.nextLine();
					TvprogramTempName=RecordSrch.nextLine();
					Watchlater.add(ChannelTemp);
					Watchlater.add(TvprogramTempName);	
				}
				RecordSrch.close();
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
  		System.out.print(Watchlater);
  		Object[][] DATA= new Object[10][10];
  		int col=0;
  		int count=0;
			for(int row=0; row<Watchlater.size()/2;row++) {
					
						DATA[row][col]=Watchlater.get(count);
						DATA[row][col+1]=Watchlater.get(count+1);
						count+=2;			
			}
			System.out.println(DATA[0][0]+" "+DATA[0][1]+" "+DATA[1][0]+" "+DATA[1][1]);
			DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
			Object Frame[]= {"Channel","TVPROGRAM"};
	 	    model.setDataVector(DATA,Frame);
	        jTable1.getTableHeader().setReorderingAllowed(false);        
	        jTable1.setRowHeight(40);
	        jTable1.setCellSelectionEnabled(true);		
    	}
    }                                          

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {                                    
       
    }                                   

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {                                    
        
        int row= jTable1.getSelectedRow();
        int col= jTable1.getSelectedColumn();
        General SubData= new General();
        SubData.GeneralFileSrchFun();
        String Channel=SubData.ChannelNameFileSrchFun((String) FrameData[row][0], true);  
        if(col!=0){
        	System.out.println(FrameData[row][col]);
        	jLabel6.setText((String) FrameData[row][col]);
        	SubData.SubData(Channel,(String)FrameData[row][col]);    	 
			jLabel8.setText(""+(String) SubData.getLength());
			jLabel10.setText("<html><body><br>"+(String) SubData.getShortDescription()+"</body></html>");
			jLabel7.setText(""+(String) SubData.getCC());
			jLabel9.setText(""+SubData.BroadCastStatusFun((String)SubData.getBroadCastStatus()));
			jLabel11.setText("<html><span style='font-size:20px'>"+SubData.GenreSrch((String)SubData.getProgramType())+"</span></html>");			 
			 if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("GOSPEL")) {
				Gospel D= new Gospel((String) SubData.getTvProgramID());
				 jLabel12.setText("Denomination " +D.getDenomination());
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("KIDS")) {
				 Kids D= new Kids((String) SubData.getTvProgramID());
		 		 jLabel12.setText("Age-range "+D.getAgeRange());
		 	 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("COMEDY")) {
				 Comedy D= new Comedy((String) SubData.getTvProgramID());
		 		 jLabel12.setText("<html><body>"+"Stars "+"<br>"+D.getStars()+"<html><body>");
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("NEWS")) {
				 News D= new News((String) SubData.getTvProgramID());
		 		 jLabel12.setText("Time-Period: "+D.getNewsPeriod());
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("WHEATHER")) {
				 Weather D= new Weather((String) SubData.getTvProgramID());
		 		 jLabel12.setText("Severty: "+D.getSevertyRating());
			 }
			 else if (SubData.GenreSrch((String)SubData.getProgramType()).equalsIgnoreCase("MOVIES")) {		
				 Movies D= new Movies((String) SubData.getTvProgramID());
		 		 jLabel12.setText("<html><body>"+"Rating- "+D.getRating()+"<br>"+"Stars- "+D.getStars()+"<br>"+"Date Realsed-"+D.getDateReleased()+"<html><body>");
			 }
			 else {
				 jLabel12.setText("Genre Data: Null");
			 }
		
		    }
        
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LayoutView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LayoutView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LayoutView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LayoutView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	Object[][] Data=new Channel().TvGuideChannel();
            	 Calendar rightNow = Calendar.getInstance();
                 int hour = rightNow.get(Calendar.HOUR_OF_DAY);
                 if(hour>12){
                     hour-=12;

                 }
            	Object[] Header= new Object[] {"Channel",(hour)+":00",(hour+1)+":00",(hour+2)+":00",(hour+3)+":00",(hour+4)+":00"};
                new LayoutView(Data,Header).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
